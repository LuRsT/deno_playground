
* Run your first web server by importing a module and exploring the security model

** What happens?
When I first ran it, it failed due to a PermissionError, and deno suggested using the flag --allow-net so that deno opens up the port correctly.

*** The PermissionError
error: Uncaught PermissionDenied: network access to "0.0.0.0:8000", run again with the --allow-net flag
    at unwrapResponse ($deno$/ops/dispatch_json.ts:42:11)
    at Object.sendSync ($deno$/ops/dispatch_json.ts:69:10)
    at Object.listen ($deno$/ops/net.ts:51:10)
    at Object.listen ($deno$/net.ts:155:22)
    at serve (server.ts:256:25)
    at web_server.ts:2:11
** What is being imported?
The package server from: https://deno.land/std@0.59.0/http/server.ts in the first line of web_server.ts. I don't know where it's being imported to.

** Does the program make sense to you i.e. do you feel you understand roughly what is going on in each line of code?
I'm surprised by the asynchornous for loop.

** What’s the output telling you about how imports work?
It shows a download, but not where it's being saved.

** What’s the output telling you about the security/permissions model?
That we need an explicit flag in order to use the network

** How do you get the server running?
deno run --allow-net web_server.ts

** How do you know it works?
curl localhost:8000

* Write your first code with tests and use deno test

** What warnings do you see when it first downloads it’s dependencies? How would you get rid of these? Why would you do this?

*** Running it without an `adder.ts`
We get an error because deno is trying to look for it
**** The error
error: Cannot resolve module "file:///home/lurst/dev/deno_playground/adder.ts" from "file:///home/lurst/dev/deno_playground/adder_test.ts"
Imported from "file:///home/lurst/dev/deno_playground/adder_test.ts:1"

*** Running it with an empty `adder.ts` file
It fails with a SyntaxError because there is no "export" called 'add'

**** The error
Download https://deno.land/std/testing/asserts.ts
Warning Implicitly using master branch https://deno.land/std/testing/asserts.ts
Download https://deno.land/std/fmt/colors.ts
Download https://deno.land/std/testing/diff.ts
Warning Implicitly using master branch https://deno.land/std/fmt/colors.ts
Warning Implicitly using master branch https://deno.land/std/testing/diff.ts
Check file:///home/lurst/dev/deno_playground/.deno.test.ts
error: Uncaught SyntaxError: The requested module './adder.ts' does not provide an export named 'add'

*** Runnning it with an "export functionadd(){}" in adder.ts
Still fails with

**** The error
Check file:///home/lurst/dev/deno_playground/.deno.test.ts
error: TS2554 [ERROR]: Expected 0 arguments, but got 2.
  assertEquals(add(3, 5), 8);
                   ~~~~
    at file:///home/lurst/dev/deno_playground/adder_test.ts:5:20


*** Running it with an "export function add(a , b){return a + b}" in adder.ts
Still fails with

**** The error
Check file:///home/lurst/dev/deno_playground/.deno.test.ts
error: TS7006 [ERROR]: Parameter 'a' implicitly has an 'any' type.
export function add(a, b){return a + b}
                    ^
    at file:///home/lurst/dev/deno_playground/adder.ts:1:21

TS7006 [ERROR]: Parameter 'b' implicitly has an 'any' type.
export function add(a, b){return a + b}
                       ^
    at file:///home/lurst/dev/deno_playground/adder.ts:1:24

Found 2 errors.

*** Running it with "export function add(a: number, b: number){return a + b}" in adder.ts
SUCCESS!

**** The output
Check file:///home/lurst/dev/deno_playground/.deno.test.ts
running 1 tests
test add ... ok (2ms)

test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out (4ms)
** What did you have to do that was Typescript specific?
Adding the keyword "export" to the function so it's public, and adding a type to each of the funtion arguments

** What does the first line tell you about how imports/exports work within your project?
The first line of the test file tells me about which functions are expected to be public.
** Where can you find the documentation for the Deno.test function?
In the standard lib manual: https://deno.land/manual/testing
** Where can you read the code for the assertEquals function?
In the assertions section of the standard lib manual: https://deno.land/manual/testing/assertions#equality


* Extra challenges

** What is the convention around mod.ts files
** What can you do to ‘lock’ dependencies for production in Deno?
** What exists in Node but not in the Deno runtime that means many packages will be incompatible? Are there any node packages that are compatible? If so how do you import them?
** What exists in a browser’s Javascript runtime but not in the Deno runtime?
** How would you run all the tests for a multi-file project?
